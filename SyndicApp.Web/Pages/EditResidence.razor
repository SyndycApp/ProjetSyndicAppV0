@page "/residences/edit/{Id:guid}"
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Modifier la résidence</h3>

@if (residence == null)
{
    <p><em>Chargement...</em></p>
}
else
{
    <EditForm Model="@residence" OnValidSubmit="UpdateResidence">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Nom</label>
            <InputText @bind-Value="residence.nom" class="form-control" />
        </div>

        <div class="form-group">
            <label>Adresse</label>
            <InputText @bind-Value="residence.adresse" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Modifier</button>
    </EditForm>
}

@code {
    [Parameter] public Guid Id { get; set; }
    private ResidenceDto? residence;

    protected override async Task OnInitializedAsync()
    {
        residence = await Http.GetFromJsonAsync<ResidenceDto>($"api/residences/{Id}");
    }

    private async Task UpdateResidence()
    {
        var response = await Http.PutAsJsonAsync($"api/residences/{Id}", residence);
        if (response.IsSuccessStatusCode)
        {
            Nav.NavigateTo("/residences");
        }
        else
        {
            Console.WriteLine("Erreur lors de la mise à jour.");
        }
    }

    public class ResidenceDto
    {
        public Guid id { get; set; }
        public string nom { get; set; } = string.Empty;
        public string adresse { get; set; } = string.Empty;
    }
}
