@page "/residences/delete/{Id:guid}"
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Supprimer la résidence</h3>

@if (residence == null)
{
    <p><em>Chargement...</em></p>
}
else
{
    <p>Voulez-vous vraiment supprimer <b>@residence.nom</b> ?</p>
    <button class="btn btn-danger" @onclick="SubmitDeleteResidence">Supprimer</button>
    <button class="btn btn-secondary" @onclick="@(() => Nav.NavigateTo("/residences"))">Annuler</button>
}

@code {
    [Parameter] public Guid Id { get; set; }
    private ResidenceDto? residence;

    protected override async Task OnInitializedAsync()
    {
        residence = await Http.GetFromJsonAsync<ResidenceDto>($"api/residences/{Id}");
    }

    private async Task SubmitDeleteResidence()
    {
        var response = await Http.DeleteAsync($"api/residences/{Id}");
        if (response.IsSuccessStatusCode)
        {
            Nav.NavigateTo("/residences");
        }
        else
        {
            Console.WriteLine("Erreur lors de la suppression.");
        }
    }

    public class ResidenceDto
    {
        public Guid id { get; set; }
        public string nom { get; set; } = string.Empty;
        public string adresse { get; set; } = string.Empty;
    }
}
